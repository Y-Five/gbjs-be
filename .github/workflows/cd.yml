name: CD
on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_ACTION_TOKEN }}
          submodules: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          ./gradlew clean bootjar -Pprofile=dev

      - name: Docker build & push
        run: docker buildx build -f ./docker/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} --push .


  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy on server
        uses: appleboy/ssh-action@master
        env:
          ENV: ${{ secrets.ENV }}
        with:
          envs: ENV
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/actions-runner/_work/gbjs-be/gbjs-be/docker
            echo "$ENV" > ./.env

            # 블루/그린 현재 활성 컨테이너 확인
            if docker ps --filter "name=gbjs-app-blue" --filter "status=running" | grep gbjs-app-blue > /dev/null; then
              ACTIVE_COLOR="blue"
            elif docker ps --filter "name=gbjs-app-green" --filter "status=running" | grep gbjs-app-green > /dev/null; then
              ACTIVE_COLOR="green"
            else
              ACTIVE_COLOR=""
            fi

            # 배포할 색상 결정
            if [ "$ACTIVE_COLOR" = "blue" ]; then
              NEW_COLOR="green"
            elif [ "$ACTIVE_COLOR" = "green" ]; then
              NEW_COLOR="blue"
            else
              NEW_COLOR="blue"
            fi

            docker compose -f docker-compose.yml -f docker-compose-${NEW_COLOR}.yml pull
            docker compose -f docker-compose.yml -f docker-compose-${NEW_COLOR}.yml up -d --build